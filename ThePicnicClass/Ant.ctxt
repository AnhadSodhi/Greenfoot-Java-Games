#BlueJ class context
comment0.params=
comment0.target=Ant()
comment1.params=
comment1.target=int\ getPoints()
comment1.text=\r\n\ Use\ this\ method\ to\ determine\ how\ many\ points\ your\ Ant\ or\ an\ opponent\ has.\r\n\ For\ exmaple,\ you\ may\ decide\ to\ only\ bump\ ants\ with\ a\ high\ number\ of\ points.\r\n\ @param\ none\r\n\ @return\ the\ number\ of\ points\ the\ Ant\ has\r\n
comment10.params=
comment10.target=boolean\ foundFood()
comment10.text=\r\n\ Let's\ the\ Ant\ know\ that\ they\ have\ found\ a\ Crumb\ which\ can\ be\ picked\ up.\r\n\ @param\ none\r\n\ @return\ true\ if\ the\ Ant\ is\ not\ currently\ holding\ a\ Crumb\ and\ has\ found\ one,\ false\ otherwise.\r\n
comment11.params=
comment11.target=boolean\ foundNest()
comment11.text=\r\n\ Let's\ the\ Ant\ know\ that\ they\ have\ found\ a\ Nest.\r\n\ @param\ none\r\n\ @return\ true\ if\ the\ Ant\ is\ not\ touching\ a\ Nest,\ false\ otherwise.\r\n
comment12.params=
comment12.target=boolean\ canBump()
comment12.text=\r\n\ Let's\ the\ Ant\ know\ that\ they\ are\ able\ to\ bump\ another\ Ant.\r\n\ Ant's\ have\ a\ delay\ and\ can't\ bump\ on\ successive\ turns.\ \r\n\ They\ must\ wait\ BUMP_DELAY\ before\ they\ can\ bump\ another\ Ant.\r\n\ @param\ none\r\n\ @return\ true\ if\ the\ Ant\ is\ not\ touching\ another\ Ant\ and\ they\ haven't\ bumped\ anyone\ for\ the\ previous\ BUMP_DELAY\ turns,\ false\ otherwise.\r\n
comment13.params=
comment13.target=boolean\ holdingFood()
comment13.text=\r\n\ Determine\ if\ the\ Ant\ is\ holding\ a\ Crumb\r\n\ @param\ none\r\n\ @return\ true\ if\ the\ Ant\ is\ holding\ a\ Crumb,\ false\ otherwise\r\n
comment14.params=
comment14.target=boolean\ isAtEdge()
comment14.text=\r\n\ A\ method\ to\ help\ you\ determine\ if\ your\ Ant\ has\ reached\ the\ edge\ of\ the\ screen.\r\n\ Movements\ past\ the\ edge\ of\ the\ screen\ are\ ignored,\ you\ must\ turn\ away\ from\ the\ edge.\r\n\ Touching\ the\ edge\ is\ ok\ if\ you\ are\ moving\ away\ from\ it.\r\n\ @param\ none\r\n\ @return\ true\ if\ the\ Ant\ it\ touching\ the\ edge\ of\ the\ screen,\ false\ otherwise.\r\n
comment15.params=savedX\ savedY\ savedRotation\ max
comment15.target=boolean\ distanceViolation(int,\ int,\ int,\ int)
comment16.params=
comment16.target=void\ act()
comment16.text=\r\n\ This\ method\ is\ not\ overridable\ in\ your\ Ant\ class.\ \r\n\ The\ information\ here\ is\ only\ to\ help\ you\ understand\ how\ your\ Ant\ work.\r\n\ You\ cannot\ change\ this\ method\ or\ use\ it.\r\n\ First\ Ants\ move,\ then\ they\ decide\ if\ the\ should\:\r\n\ 1)\ bump\r\n\ 2)\ drop\ their\ food\r\n\ 3)\ pick\ up\ food\r\n\ If\ an\ Ant\ has\ reached\ a\ Nest\ it\ will\ always\ deposit\ their\ Crumb\ for\ points\r\n\ \r\n\ The\ act\ full\ sequence\ is\ as\ follows\:\r\n\ <pre>\r\n\ \r\n\ \ updateSpeed();\r\n\ \ if(wantsToMove())\r\n\ \ \ \ \ \ move();\r\n\ \ \ \ \ \ \r\n\ \ bumpCounter_++;\r\n\ \ if(canBump()\ &&\ wantsToBump())\r\n\ \ \ \ \ \ bump();\r\n\ \ \r\n\ \ if(holdingFood()\ &&\ wantsToDropFood())\r\n\ \ \ \ \ \ dropFood();\r\n\ \ if(foundFood()\ &&\ wantsToPickUpFood())\r\n\ \ \ \ \ \ pickupFood();\ \ \r\n\ \ \ \ \ \ \r\n\ \ if(holdingFood())\r\n\ \ {\r\n\ \ \ \ \ \ if(foundNest())\r\n\ \ \ \ \ \ \ \ \ \ depositFood();\r\n\ \ }\ \ \ \ \r\n\ \ </pre>\ \r\n\ \ @param\ none\r\n\ \ @return\ nothing\r\n
comment17.params=amount
comment17.target=void\ injure(int)
comment17.text=\r\n\ Called\ only\ by\ an\ active\ Spider.\r\n\ This\ method\ takes\ away\ points\ equal\ to\ the\ Spider's\ venomStrength\ and\ forces\ the\ Ant\ to\ drop\ its\ food.\r\n\ @param\ amount\ The\ amount\ of\ points\ to\ take\ away\ from\ the\ Ant\r\n\ @return\ nothing\r\n
comment18.params=
comment18.target=void\ updateSpeed()
comment18.text=\r\n\ Not\ for\ use\ in\ the\ game.\ \r\n\ This\ method\ determines\ the\ speed\ of\ the\ Ant\ during\ its\ turn.\r\n\ @param\ nothing\r\n\ @return\ nothing\r\n
comment19.params=
comment19.target=void\ pickupFood()
comment19.text=\r\n\ Not\ for\ use\ in\ the\ game.\ \r\n\ This\ method\ picks\ up\ a\ Crumb\ for\ an\ Ant.\r\n\ Should\ only\ be\ called\ after\ foundFood\ has\ returned\ true.\r\n\ @param\ nothing\r\n\ @return\ nothing\r\n
comment2.params=
comment2.target=int\ getSpeed()
comment2.text=\r\n\ Use\ this\ method\ to\ determine\ the\ speed\ of\ your\ Ant\ or\ an\ opponent.\r\n\ You\ cannot\ manually\ change\ your\ speed,\ only\ examine\ it\ to\ determine\ where\ you\ could\ move\r\n\ @param\ none\r\n\ @return\ the\ speed\ (in\ pixels)\ of\ this\ Ant\ \ \ \ \ *\ \r\n
comment20.params=
comment20.target=void\ depositFood()
comment20.text=\r\n\ Not\ for\ use\ in\ the\ game.\ \r\n\ This\ method\ deposits\ a\ Crumb\ for\ an\ Ant\ and\ replaces\ it\ with\ a\ new\ (random)\ Crumb.\r\n\ @param\ nothing\r\n\ @return\ nothing\r\n
comment21.params=
comment21.target=void\ dropFood()
comment21.text=\r\n\ Not\ for\ use\ in\ the\ game.\ \r\n\ This\ method\ makes\ an\ Ant\ drop\ its\ food\ to\ a\ random\ location\ 50\ px\ away.\r\n\ @param\ nothing\r\n\ @return\ nothing\r\n
comment22.params=
comment22.target=void\ bump()
comment22.text=\r\n\ Not\ for\ use\ in\ the\ game.\ \r\n\ This\ method\ bumps\ another\ Ant.\r\n\ canBump()\ must\ be\ called\ prior\ to\ this\ or\ a\ null\ pointer\ can\ be\ thrown\r\n\ @param\ nothing\r\n\ @return\ nothing\r\n
comment23.params=
comment23.target=boolean\ acting()
comment23.text=\r\n\ Not\ for\ use,\ helper\ method\ to\ enfore\ rules\ of\ game\r\n
comment24.params=
comment24.target=boolean\ depositing()
comment24.text=\r\n\ Not\ for\ use,\ helper\ method\ to\ enfore\ rules\ of\ game\r\n
comment25.params=
comment25.target=boolean\ dropping()
comment25.text=\r\n\ Not\ for\ use,\ helper\ method\ to\ enfore\ rules\ of\ game\r\n
comment26.params=
comment26.target=boolean\ movingFood()
comment26.text=\r\n\ Not\ for\ use,\ helper\ method\ to\ enfore\ rules\ of\ game\r\n
comment3.params=
comment3.target=java.lang.String\ getOwner()
comment3.text=\r\n\ Use\ this\ method\ to\ get\ the\ name\ of\ an\ Ant.\r\n\ You\ MUST\ implement\ this\ method\ in\ your\ own\ Ant\ class\ (for\ the\ scoreboard)\r\n\ @param\ none\r\n\ @return\ the\ name\ of\ this\ Ant\r\n
comment4.params=
comment4.target=boolean\ wantsToMove()
comment4.text=\r\n\ This\ method\ determines\ the\ whether\ or\ not\ your\ Ant\ wants\ to\ move.\ \r\n\ If\ it\ returns\ true,\ then\ your\ move()\ method\ will\ be\ called\ on\ its\ turn\r\n\ It\ it\ returns\ false,\ your\ Ant\ will\ not\ be\ moved\ during\ its\ turn\r\n\ DEFAULT\ is\ to\ return\ true,\ always\ move\ during\ your\ turn.\r\n\ @param\ none\r\n\ @return\ true\ or\ false,\ whether\ or\ not\ your\ Ant\ is\ going\ to\ move\ during\ its\ turn.\r\n
comment5.params=
comment5.target=void\ move()
comment5.text=\r\n\ Defines\ your\ Ant's\ movement.\r\n\ Off\ all\ the\ possible\ locations\ it\ can\ legally\ move\ to,\ which\ would\ you\ choose?\r\n\ This\ is\ where\ you\ will\ likely\ turn\ and\ move\ your\ Ant\ using\ the\ usual\ methods\ of\ an\ Actor.\r\n\ Look\ for\ a\ Crumb/Nest,\ avoid\ Spiders,\ etc.\r\n\ If\ you\ move\ farther\ than\ your\ current\ speed\ you\ will\ lose\ a\ turn.\r\n\ You\ may\ find\ it\ useful\ to\ think\ of\ your\ speed\ as\ a\ bounding\ box\ of\ possible\ locations\:\r\n\ <pre>\r\n\ Ex.\ \ speed_\ \=\ 2,\ *\ \=\ legal\ move,\ X\ \=\ out\ of\ bounds,\ A\ \=\ the\ Ant\r\n\ XXXXXXX\r\n\ X*****X\r\n\ X*****X\r\n\ X**A**X\r\n\ X*****X\r\n\ X*****X\r\n\ XXXXXXX\r\n\ </pre>\r\n\ @param\ none\r\n\ @return\ nothing\r\n
comment6.params=
comment6.target=boolean\ wantsToPickUpFood()
comment6.text=\r\n\ Your\ Ant\ can\ determine\ whether\ or\ not\ it\ should\ pickup\ a\ Crumb\ that\ it\ finds.\r\n\ If\ you\ are\ near\ a\ Crumb\ of\ higher\ value\ or\ a\ Spider\ with\ timeToStrike\ <\=\ 0\ you\ may\ choose\ to\ avoid\ the\ Crumb.\r\n\ DEFAULT\ is\ to\ return\ true,\ always\ pickup\ food\ you\ find.\r\n\ This\ question\ is\ asked\ during\ your\ turn\ if\ you\ have\ found\ a\ Crumb\ (are\ touching\ a\ Crumb)\r\n\ @param\ none\r\n\ @return\ nothing\r\n
comment7.params=
comment7.target=boolean\ wantsToBump()
comment7.text=\r\n\ If\ you\ canBump()\ another\ Ant\ this\ method\ will\ be\ called\ to\ let\ you\ decide\ if\ you\ should\ actually\ bump\ the\ other\ Ant.\r\n\ Any\ Ant\ can\ be\ bumped\ but\ it\ has\ no\ effect\ unless\ the\ Ant\ is\ holdingFood().\r\n\ Ants\ holding\ food\ that\ are\ bumped\ are\ forced\ to\ drop\ their\ food\ somewhere\ randomly\ 50px\ away.\r\n\ After\ bumping\ you\ will\ havev\ a\ 30\ act\ delay\ before\ you\ can\ bump\ again.\r\n\ You\ may\ be\ strategic\ and\ only\ bump\ when\ an\ Ant\ has\ a\ higher\ number\ of\ points\ than\ you,\ there\ is\ no\ other\ crumb\ nearby,\ etc.\r\n\ DEFAULT\ is\ to\ return\ true,\ always\ bump\ an\ Ant\ when\ you\ are\ able\ to.\r\n\ @param\ none\r\n\ @return\ nothing\r\n
comment8.params=
comment8.target=boolean\ wantsToDropFood()
comment8.text=\r\n\ This\ method\ determines\ if\ your\ Ant\ should\ drop\ food\ that\ it\ is\ holding.\r\n\ Spiders\ have\ the\ same\ speed\ as\ Ants\ that\ are\ holding\ food\ so\ you\ may\ want\ to\ drop\ your\ food\ to\ get\ away\ quickly.\r\n\ You\ may\ be\ on\ your\ way\ to\ a\ Nest\ and\ bump\ into\ another\ Crumb\ (or\ see\ one\ close\ by),\ worth\ more\ points.\ \r\n\ You\ can\ drop\ this\ Crumb\ and\ pickup\ the\ better\ one.\r\n\ DEFAULT\ is\ to\ return\ false,\ never\ drop\ food\ you\ are\ carrying.\r\n\ @param\ none\r\n\ @return\ nothing\r\n
comment9.params=
comment9.target=Crumb\ getCrumb()
comment9.text=\r\n\ You\ can\ ask\ other\ Ants\ to\ see\ their\ Crumb.\ \r\n\ If\ you\ use\ the\ getPoints()\ method\ for\ a\ Crumb\ you\ can\ make\ a\ more\ accurate\ judgement\ about\ whether\ or\ not\ bump\ the\ Ant.\r\n\ You\ would\ also\ know\ that\ they\ can't\ RUN\ while\ holding\ a\ Crumb.\r\n\ @param\ none\r\n\ @return\ a\ Crumb\ being\ carried\ by\ this\ Ant\ (null\ if\ no\ Crumb\ is\ being\ held)\r\n
numComments=27
